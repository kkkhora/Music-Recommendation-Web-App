<<<<<<< HEAD
import Blob from './index.js';

const _File = class File extends Blob {
  #lastModified = 0;
  #name = '';
=======
import Blob from './index.js'

const _File = class File extends Blob {
  #lastModified = 0
  #name = ''
>>>>>>> 2790dd6be12be7d3fe3896bcbbb6ec1de18d19a9

  /**
   * @param {*[]} fileBits
   * @param {string} fileName
   * @param {{lastModified?: number, type?: string}} options
   */// @ts-ignore
<<<<<<< HEAD
  constructor(fileBits, fileName, options = {}) {
    if (arguments.length < 2) {
      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);
    }
    super(fileBits, options);

    const modified = Number(options.lastModified);
    this.#lastModified = Number.isNaN(modified) ? Date.now() : modified
    this.#name = fileName;
  }

  get name() {
    return this.#name;
  }

  get lastModified() {
    return this.#lastModified;
  }

  get [Symbol.toStringTag]() {
    return "File";
=======
  constructor (fileBits, fileName, options = {}) {
    if (arguments.length < 2) {
      throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`)
    }
    super(fileBits, options)

    if (options === null) options = {}

    // Simulate WebIDL type casting for NaN value in lastModified option.
    const lastModified = options.lastModified === undefined ? Date.now() : Number(options.lastModified)
    if (!Number.isNaN(lastModified)) {
      this.#lastModified = lastModified
    }

    this.#name = String(fileName)
  }

  get name () {
    return this.#name
  }

  get lastModified () {
    return this.#lastModified
  }

  get [Symbol.toStringTag] () {
    return 'File'
  }

  static [Symbol.hasInstance] (object) {
    return !!object && object instanceof Blob &&
      /^(File)$/.test(object[Symbol.toStringTag])
>>>>>>> 2790dd6be12be7d3fe3896bcbbb6ec1de18d19a9
  }
}

/** @type {typeof globalThis.File} */// @ts-ignore
<<<<<<< HEAD
export const File = _File;
export default File;
=======
export const File = _File
export default File
>>>>>>> 2790dd6be12be7d3fe3896bcbbb6ec1de18d19a9
